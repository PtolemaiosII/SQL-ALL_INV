CREATE TABLE TB_INVENTORY
(ID INTEGER NOT NULL,
QTY DOUBLE PRECISION,
UNAVAILABLE DOUBLE PRECISION,
DROPSHIP DOUBLE PRECISION,
QTYCOMMITTED DOUBLE PRECISION,
ALLOCATED DOUBLE PRECISION,
ONORDER DOUBLE PRECISION,
QTYNOTAVAILABLETOPICK DOUBLE PRECISION,
PRIMARY KEY (ID));

CREATE TABLE TB_M_LVL_BOM
(BOM_ID INTEGER NOT NULL,
BOMITEM_TYPEID INTEGER,
BOMITEMTYPE_NAME VARCHAR(30),
QTY DOUBLE PRECISION,
LOW_P_ID INTEGER NOT NULL,
LOW_P_DESCRIPTION VARCHAR(252),
LOW_P_NUM VARCHAR(70),
LOW_P_DEFAULTBOMID INTEGER,
UOM_CODE VARCHAR(10),
LEVEL INTEGER,
MOTHER_BOM INTEGER NOT NULL,
PRIMARY KEY (BOM_ID, LOW_P_ID, MOTHER_BOM));

CREATE INDEX INDEX_LOW_P_NUM 
	ON TB_M_LVL_BOM (LOW_P_NUM);
	
CREATE INDEX INDEX_BOM_ID 
	ON TB_M_LVL_BOM (BOM_ID);

CREATE INDEX INDEX_LOW_P_ID 
	ON TB_M_LVL_BOM (LOW_P_ID);

CREATE INDEX INDEX_MOTHER_BOM 
	ON TB_M_LVL_BOM (MOTHER_BOM);

CREATE PROCEDURE TB_INVENTORY_UPDATE
AS BEGIN
merge into TB_INVENTORY
	using ALL_INV
	on ALL_INV.ID = TB_INVENTORY.ID
	when matched then
		update set 
			TB_INVENTORY.QTY = ALL_INV.QTY,
			TB_INVENTORY.UNAVAILABLE = ALL_INV.UNAVAILABLE,
			TB_INVENTORY.DROPSHIP = ALL_INV.DROPSHIP,
			TB_INVENTORY.QTYCOMMITTED = ALL_INV.QTYCOMMITTED,
			TB_INVENTORY.ALLOCATED = ALL_INV.ALLOCATED,
			TB_INVENTORY.ONORDER = ALL_INV.ONORDER,
			TB_INVENTORY.QTYNOTAVAILABLETOPICK = ALL_INV.QTYNOTAVAILABLETOPICK
	when not matched then
		insert (ID, QTY, UNAVAILABLE, DROPSHIP, QTYCOMMITTED, ALLOCATED, ONORDER, QTYNOTAVAILABLETOPICK)
		values (ALL_INV.ID, 
				ALL_INV.QTY,
		        ALL_INV.UNAVAILABLE,
		        ALL_INV.DROPSHIP,
		        ALL_INV.QTYCOMMITTED,
		        ALL_INV.ALLOCATED,
		        ALL_INV.ONORDER,
		        ALL_INV.QTYNOTAVAILABLETOPICK);
END


CREATE PROCEDURE TB_M_LVL_BOM_UPDATE
AS BEGIN
merge into TB_M_LVL_BOM
	using M_LVL_BOM
	on M_LVL_BOM.BOM_ID = TB_M_LVL_BOM.BOM_ID AND M_LVL_BOM.LOW_P_ID = TB_M_LVL_BOM.LOW_P_ID AND M_LVL_BOM.MOTHER_BOM = TB_M_LVL_BOM.MOTHER_BOM
	when matched then
		update set 
			TB_M_LVL_BOM.BOMITEM_TYPEID = M_LVL_BOM.BOMITEM_TYPEID,
			TB_M_LVL_BOM.BOMITEMTYPE_NAME = M_LVL_BOM.BOMITEMTYPE_NAME,
			TB_M_LVL_BOM.QTY = M_LVL_BOM.QTY,
			TB_M_LVL_BOM.LOW_P_DESCRIPTION = M_LVL_BOM.LOW_P_DESCRIPTION,
			TB_M_LVL_BOM.LOW_P_NUM = M_LVL_BOM.LOW_P_NUM,
			TB_M_LVL_BOM.LOW_P_DEFAULTBOMID = M_LVL_BOM.LOW_P_DEFAULTBOMID,
			TB_M_LVL_BOM.UOM_CODE = M_LVL_BOM.UOM_CODE,
			TB_M_LVL_BOM.LEVEL = M_LVL_BOM.LEVEL
	when not matched then
		insert (BOM_ID, BOMITEM_TYPEID, BOMITEMTYPE_NAME, QTY, LOW_P_ID, LOW_P_DESCRIPTION, LOW_P_NUM, LOW_P_DEFAULTBOMID, UOM_CODE, LEVEL, MOTHER_BOM)
		values (M_LVL_BOM.BOM_ID, 
				M_LVL_BOM.BOMITEM_TYPEID,
				M_LVL_BOM.BOMITEMTYPE_NAME,
				M_LVL_BOM.QTY,
				M_LVL_BOM.LOW_P_ID,
				M_LVL_BOM.LOW_P_DESCRIPTION,
				M_LVL_BOM.LOW_P_NUM,
				M_LVL_BOM.LOW_P_DEFAULTBOMID,
				M_LVL_BOM.UOM_CODE,
				M_LVL_BOM.LEVEL,
				M_LVL_BOM.MOTHER_BOM);
END
